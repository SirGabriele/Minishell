echo lala && (ls -la || echo non) | echo non | ls || echo oui

1. echo lala
2. && ls -la
3. || echo non
4. | echo non
5. | ls
6. || echo oui


1. echo lala
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_NULL;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "echo lala";
		struct s_cmd_list_ms    *next;
	}
	
2. && ls -la
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_AND_OPER;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "ls -la";
		struct s_cmd_list_ms    *next;
	}
	
3. || echo non
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_OR_OPER;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "echo non";
		struct s_cmd_list_ms    *next;
	}
	
4. | echo non
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_NULL;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "echo non";
		struct s_cmd_list_ms    *next;
	}

5.| ls
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_NULL;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "ls";
		struct s_cmd_list_ms    *next;
	}
	
6. || echo oui
char                    **to_create_trunc = NULL;
char                    **to_create_append = NULL;
char                    *infile = NULL;
char                    *outfile = NULL;
t_tokens                outfile_mode = NULL;
t_token		what_is_cmd_after = TOK_OR_OPER;
	struct s_cmd_list_ms    *first_cmd;
	{
		char                    *correct_path;
		char                    *cmd_and_args = "echo oui";
		struct s_cmd_list_ms    *next;
	}
