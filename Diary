Gerer les redirections si TOK NULL ou TOK PIPE

cat
infile_mode = TOK_NULL -> pas de dup2
outfile_mode = TOK_NULL -> pas de dup2

cat | ls
infile_mode = TOK_NULL -> pas de dup2
outfile_mode = TOK_PIPE -> dup2(pipes->after[1], 1);

		OK

-------------------------------------------------------------

valeur de retour == return value de execve ON SUCCESS
				== return value de exit() si execve fail

1 ->	infile non existant
		permission denied (pas le droit de read ou tentative d'ecrire dans un fichier readonly) OK
		mauvaise option avec un non built in
		argument de commande non existant
		lecture d'un directory

2 ->	mauvaise option avec un built in OK
		utilisation d'une commande exigeant un argument, mais n'en ayant OK

126 ->	command not executable


127 -> command not found (wrong path)

255 ->	invalid/out of range value in exit()

------------------------------------------------------------

faire la gestion des && et || dans la recursive

------------------------------------------------------------

faire la recherche des PATHS avec content[0]
test un infile inexsistant et voir code d'erreur

------------------------------------------------------------

ajouter les codes d'erreurs des signaux

------------------------------------------------------------

echo $_

------------------------------------------------------------

Changer execve qui prend root->content[0] avec le path. Ne pas changer root->content[0] pour string avec path

------------------------------------------------------------

Faire en sorte que les heredoc passent dans le parsing, virer les quotes et expand
